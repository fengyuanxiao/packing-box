[{"E:\\项目包\\packing-box\\src\\index.js":"1","E:\\项目包\\packing-box\\src\\App.js":"2","E:\\项目包\\packing-box\\src\\reportWebVitals.js":"3","E:\\项目包\\packing-box\\src\\pages\\home.jsx":"4","E:\\项目包\\packing-box\\src\\pages\\lists.jsx":"5"},{"size":531,"mtime":1608377516393,"results":"6","hashOfConfig":"7"},{"size":415,"mtime":1608377516393,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1608377516393,"results":"9","hashOfConfig":"7"},{"size":15539,"mtime":1608384612820,"results":"10","hashOfConfig":"7"},{"size":3410,"mtime":1608438023543,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"4bzoyp",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\项目包\\packing-box\\src\\index.js",[],["24","25"],"E:\\项目包\\packing-box\\src\\App.js",[],"E:\\项目包\\packing-box\\src\\reportWebVitals.js",[],"E:\\项目包\\packing-box\\src\\pages\\home.jsx",["26","27","28","29","30","31","32","33","34","35","36","37","38"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Select, Button, Checkbox, Row, Col, Input, Spin, message, Image } from 'antd';\r\nimport { ExclamationCircleFilled } from '@ant-design/icons';\r\nimport * as dd from 'dingtalk-jsapi';\r\n\r\nimport './home.css';\r\n\r\nconst checkboxArrs = [];      //储存选择按钮选中的数据\r\nconst newCheckboxArrs = [];   //合并已经储存的按钮选中的数组\r\nconst moneyArrs = [];         //价格数组\r\nlet allGuigeArrs = [];       //存储选中规格的所有属性到对象，并追加到数组\r\n\r\nlet AallGuigeArrs = [];\r\n\r\nlet storageIdArrs = [];     //储存选中按钮 选中的规格id\r\nlet storageMoneyArrs = [];\r\n\r\nlet defaultValueArr = [];   // 点击选中按钮，默认选中数组\r\n\r\n// 成本添加\r\nlet o = 0;\r\n\r\n// 判断是否选中重复\r\nconst chongfuArr = [];\r\n\r\n\r\nfunction Home(props) {\r\n\r\n  // 储存的一级数据\r\n  const [oneData, setOneData] = useState(null);\r\n  // 储存获取到的二级分类数据\r\n  const [twoData, setTwoData] = useState(null);\r\n  // 储存获取到的三级分类数据\r\n  const [threeData, setThreeData] = useState(null);\r\n\r\n\r\n  // 储存选中包装盒的id\r\n  const [storageId, setStorageId] = useState(null);\r\n  // 储存选中包装盒的价格\r\n  const [storageMoney, setStorageMoney] = useState(null);\r\n  // 储存选中包装盒的物料编号\r\n  const [storageBianhao, setStorageBianhao] = useState(null);\r\n  // 储存选中规格的图片\r\n  const [storageImg, setStorageImg] = useState(null);\r\n\r\n  const [AstorageMoneyArrs, setStorageMoneyArrs] = useState(null);\r\n\r\n  // 显示到多选框\r\n  const [twoValue, setTwoValue] = useState(null);\r\n  const [threeValue, setThreeValue] = useState(null);\r\n\r\n  const [sallGuigeArrs, setallGuigeArrs] = useState(null);\r\n  const [sstorageIdArrs, setStorageIdArrs] = useState(null);\r\n  // 储存多选中的数据\r\n  const [checkedValues, setCheckedValues] = useState(null);\r\n  // 合并价格数组并保存到state\r\n  const [concatMoneyArr, setConcatMoneyArr] = useState(null);\r\n\r\n  // 没有选择规格，却点击选中按钮 判断\r\n  const [clockState, setClockState] = useState(false);\r\n\r\n  // 去重id\r\n  const [defaultValueArrs, setDefaultValueArrs] = useState(null);\r\n\r\n  // 成本价\r\n  const [costPrice, setCostPrice] = useState(0);\r\n  // 包装方案名state\r\n  const [inputVal, setInputVal] = useState('');\r\n  // loading\r\n  const [spinning, setSpinning] = useState(false);\r\n\r\n\r\n  const { Option } = Select;\r\n\r\n  useEffect(()=> {\r\n\r\n    // dd.runtime.permission.requestAuthCode({\r\n    //   corpId: \"dingd3bd415677f4c851\",\r\n    //   onSuccess: function(result) {\r\n    //     console.log(result)\r\n    //   /*{\r\n    //       code: 'hYLK98jkf0m' //string authCode\r\n    //   }*/\r\n    //   },\r\n    //   onFail : function(err) {}\r\n   \r\n    // })\r\n\r\n    // 获取主类\r\n    axios.post('/kaopin/bom/getCategory',{\r\n      'wuliao_type': '',\r\n      'cate_type': 1\r\n    })\r\n    .then(function (res) {\r\n      if ( res.data.status ) {\r\n        // 储存获取的主类数据\r\n        setOneData(res.data.data);\r\n        // console.log(res.data.data);\r\n\r\n      } else {\r\n        message.warning(res.data.msg);\r\n      }\r\n      // console.log(res.data);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n    \r\n    \r\n  },[])\r\n\r\n  function handleBack() {\r\n    props.history.push({ pathname: \"/\" });\r\n  }\r\n  \r\n\r\n  // 一级分类盒回调函数 次类\r\n  function handleChangeOne(value) {\r\n\r\n      console.log(value);\r\n    // 获取次类\r\n    axios.post('/kaopin/bom/getCategory',{\r\n      'wuliao_type': value,\r\n      'cate_type': 1\r\n    })\r\n    .then(function (res) {\r\n      if ( res.data.status ) {\r\n        \r\n        // 储存一级分类获取的二级分类数据\r\n        setTwoData(res.data.data);\r\n        console.log(res.data.data);\r\n\r\n      } else {\r\n        message.warning(res.data.msg);\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n\r\n\r\n  }\r\n\r\n  // 二级分类，次类\r\n  function handleChangeTwo(value) {\r\n    // console.log(`次类函数：${value}`);\r\n    // 储存二级分类选中的value\r\n    setTwoValue(value);\r\n    // 循环二级分类，得到键 值，判断二级分类函数回调的值是否等于当前值，则保存遍历三级分类\r\n    for (const key in twoData) {\r\n      if ( key === value ) {\r\n        setThreeData(twoData[key]);\r\n        console.log(twoData[key]);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  // 三级分类，规格select\r\n  function handleChangeThree(value) {\r\n\r\n    // 储存三级分类选中的value\r\n    setThreeValue(value);\r\n    \r\n    // console.log(value);\r\n\r\n    setClockState(true); //setClockState状态为false 无法选择规格\r\n\r\n    for (let j = 0; j < storageIdArrs.length; j++) {\r\n      \r\n      if ( chongfuArr[j] === value ) {\r\n\r\n        message.warning('规格重复！');\r\n        setClockState(false); //setClockState状态为false 无法选择规格\r\n\r\n      }else {\r\n        console.log('继续');\r\n      }\r\n      \r\n    }\r\n\r\n    // 遍历二级类目下的数据，获取三级类目的规格数据\r\n    for (let i = 0; i < threeData.length; i++) {\r\n      if ( threeData[i].规格 + threeData[i].单位 + threeData[i].单价 === value ) {\r\n        // console.log(threeData[i].id);\r\n        // 储存规格id\r\n        setStorageId(threeData[i].id);\r\n        // 储存规格价格\r\n        setStorageMoney(threeData[i].单价);\r\n        // 储存规格编号\r\n        setStorageBianhao(threeData[i].物料编号);\r\n        // 储存规格图片\r\n        setStorageImg(threeData[i].img);\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n  \r\n  // 选择函数，选择将确定的规格存入数组中，后将遍历到eslect\r\n  let guigeObj = {};\r\n  let money = 0;\r\n  function handleOk() {\r\n\r\n    // console.log(\"点击了选择按钮\" + storageId);\r\n\r\n    if ( clockState ) {\r\n\r\n      // console.log( twoValue );\r\n      // console.log( threeValue );\r\n      // console.log(storageBianhao);\r\n      // console.log( storageId );\r\n      // console.log(storageMoney);\r\n      // 储存规格所有数据到对象中\r\n      guigeObj.twoValue = twoValue;\r\n      guigeObj.threeValue = threeValue;\r\n      guigeObj.storageBianhao = storageBianhao;\r\n      guigeObj.storageId = storageId;\r\n      guigeObj.storageImg = storageImg;\r\n      guigeObj.storageMoney = parseFloat(storageMoney);\r\n      // console.log(guigeObj);\r\n      // 将添加的多选框数据追加到数组中\r\n      allGuigeArrs.push(guigeObj);\r\n      setallGuigeArrs(allGuigeArrs);\r\n\r\n      storageIdArrs.push(guigeObj.storageId);\r\n      // setStorageIdArrs(storageIdArrs.concat(newstorageIdArrss));\r\n\r\n      storageMoneyArrs.push(guigeObj.storageMoney);\r\n      // setStorageMoneyArrs(storageMoneyArrs);\r\n      // console.log(AstorageMoneyArrs);\r\n\r\n      for (let i = 0; i < storageMoneyArrs.length; i++) {\r\n        money += storageMoneyArrs[i];\r\n        \r\n      }\r\n      // console.log(money.toFixed(4));\r\n      setCostPrice(money.toFixed(4));\r\n      console.log(allGuigeArrs);\r\n      console.log(storageIdArrs);\r\n      console.log(storageMoneyArrs);\r\n\r\n\r\n      chongfuArr.push(threeValue);\r\n      // console.log(chongfuArr);\r\n      // 合并 判断重复 数组\r\n      // chongfuArrs.concat(chongfuArr);\r\n      // console.log(chongfuArrs);\r\n\r\n      // 将选中的数据追加到数组\r\n      // checkboxArrs.push(storageId + twoValue + threeValue);\r\n      // 合并数组\r\n      // setConcatArr(checkboxArrs.concat(newCheckboxArrs));\r\n      \r\n      // 储存价格到数组中\r\n      // moneyArrs.push(storageMoney);\r\n      // 合并价格数组 并保存\r\n      // setConcatMoneyArr(moneyArrs.concat(newMoneyArr));\r\n      // console.log(moneyArrs);\r\n      // console.log(parseFloat(storageMoney));\r\n      o += parseFloat(storageMoney)\r\n      setCostPrice(o.toFixed(4));\r\n\r\n      // 循环截取出包装盒id ，后选中按钮点击默认显示\r\n      // defaultValueArr.push(checkboxArrs[num].slice(0,2));\r\n      // num++;\r\n      // console.log(defaultValueArr);\r\n      setClockState(false); //setClockState状态为false 无法选择规格\r\n\r\n    }else {\r\n      message.warning('请选择规格！');\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  // 多选框\r\n  let sum = 0;\r\n  function onChangea(checkedValues) {\r\n\r\n    // storageIdArrs = checkedValues;\r\n\r\n    for (let i = 0; i < checkedValues.length; i++) {\r\n      sum += checkedValues[i];  //多选储存新价格\r\n\r\n    }\r\n    // 多选价格更变储存\r\n    setCostPrice(sum.toFixed(4));\r\n    // setStorageIdArrs(allGuigeId.concat(storageIdArrs));\r\n\r\n    setCheckedValues(checkedValues);\r\n\r\n    // console.log(AallGuigeArrs)\r\n    // console.log(allGuigeArrs);\r\n    // console.log(checkedValues);\r\n    console.log(storageMoneyArrs);\r\n    // setStorageMoneyArrs(checkedValues);\r\n    console.log(AstorageMoneyArrs);\r\n\r\n  }\r\n\r\n  // 方案名 input回调取值\r\n  function handleInputVal(e) {\r\n\r\n    // 储存方案包装名\r\n    setInputVal(e.target.value);\r\n  }\r\n\r\n  // 保存按钮\r\n  let allGuigeId = [];    //储存选中的id ，将要传给后端\r\n  function handlePreservation() {\r\n    // 传入id数组\r\n    // console.log(sstorageIdArrs);\r\n    // console.log(storageIdArrs);\r\n    // console.log(checkedValues);\r\n// console.log(props.location.state)\r\n    // console.log(checkedValues);\r\n    if ( inputVal ) {\r\n      // true 遮罩显示\r\n      \r\n      if ( checkedValues ) {\r\n        \r\n        for (let i = 0; i < allGuigeArrs.length; i++) {\r\n\r\n          for (let j = 0; j < checkedValues.length; j++) {\r\n\r\n            if ( allGuigeArrs[i].storageMoney === checkedValues[j] ) {\r\n              allGuigeId.push(allGuigeArrs[i].storageId);\r\n              console.log(allGuigeArrs[i].storageId);\r\n            }\r\n          }\r\n        }\r\n        // 更改loding状态\r\n        setSpinning(true);\r\n\r\n        axios.post('/kaopin/bom/add',{\r\n          'details': allGuigeId.join(\",\"),        //传入的id\r\n          'plan_name': inputVal,        //计划名称\r\n          'plan_type': props.location.state,\r\n          'total_price': costPrice,\r\n        })\r\n        .then(function (res) {\r\n          if ( res.data.status ) {\r\n            message.warning(res.data.msg);\r\n            setSpinning(false);\r\n            // 刷新页面\r\n            window.location.reload();\r\n    \r\n          } else {\r\n            message.warning(res.data.msg);\r\n            // 更改loding状态\r\n            setSpinning(false);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n          // 更改loding状态\r\n          setSpinning(false);\r\n        });\r\n\r\n        \r\n      }else {\r\n        \r\n        // 更改loding状态\r\n        setSpinning(true);\r\n\r\n        axios.post('/kaopin/bom/add',{\r\n          'details': storageIdArrs.join(\",\"),        //传入的id\r\n          'plan_name': inputVal,        //计划名称\r\n          'plan_type': props.location.state,\r\n          'total_price': costPrice,\r\n        })\r\n        .then(function (res) {\r\n          if ( res.data.status ) {\r\n            message.warning(res.data.msg);\r\n            setSpinning(false);\r\n            // 刷新页面\r\n            window.location.reload();\r\n    \r\n          } else {\r\n            message.warning(res.data.msg);\r\n            // 更改loding状态\r\n            setSpinning(false);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n          // 更改loding状态\r\n          setSpinning(false);\r\n        });\r\n\r\n      }\r\n\r\n      \r\n\r\n    } else {\r\n\r\n      message.warning('请输入包装名！');\r\n    }\r\n  }message.config({ //更改警告框的位置\r\n  top: '40%',\r\n});\r\n\r\n\r\n  return(\r\n    <div style={{ height: '100%' }}>\r\n      <Spin spinning={spinning} tip=\"Loading...\">\r\n        <header className='header'>\r\n          <span className=\"fanhui\" onClick={handleBack}>＜返回</span>\r\n        包装BOM\r\n        </header>\r\n        <div className='box'>\r\n          {/* 一级分类盒 */}\r\n          <div style={{ display: 'flex' }}>\r\n            <Select className=\"select_one\" defaultValue=\"主类\" style={{ width: 140 }} onChange={handleChangeOne}>\r\n              {\r\n                oneData ?\r\n                  oneData.map((item, index) =>{\r\n                    return(\r\n                      <Option key={index} value={item}>{item}</Option>\r\n                    )\r\n                  })\r\n                :\r\n                  ''\r\n              }\r\n            </Select>\r\n            {/* 二级分类,次类 具体商品盒 */}\r\n            <Select defaultValue=\"次类\" style={{ width: 220 }} onChange={handleChangeTwo}>\r\n              {\r\n                twoData ?\r\n                Object.keys(twoData).map((key, index) => {\r\n                  return(\r\n                    <Option key={index} value={key}>{key}</Option>\r\n                  )\r\n                })\r\n                :\r\n                \"\"\r\n              }\r\n            </Select>\r\n          </div>\r\n          {/* 三级分类,规格 */}\r\n          <div className=\"specification\">\r\n            <Select className=\"select_three\" defaultValue=\"规格\" style={{ width: 280 }} onChange={handleChangeThree}>\r\n              {\r\n                threeData ?\r\n                  threeData.map((item, index) => {\r\n                    return(\r\n                      <Option key={index} value={item.规格 + item.单位 + item.单价}>{item.规格 + item.单位 + item.单价}</Option>\r\n                    )\r\n                  })\r\n                :\r\n                  \"\"\r\n              }\r\n            </Select>\r\n            <Button onClick={handleOk} className=\"select_btn\" type=\"primary\" ghost={true}>选择</Button>\r\n          </div>\r\n          {/* 多选框 */}\r\n          <div className=\"specification_pull_down\">\r\n            {/*  defaultValue={storageIdArrs} */}\r\n            <Checkbox.Group defaultValue={storageMoneyArrs} style={{ width: '100%' }} onChange={onChangea}>\r\n              <Row>\r\n                {\r\n                  sallGuigeArrs ?\r\n                    sallGuigeArrs.map((item, index) => {\r\n                      // console.log(item);\r\n                      return(\r\n                        <Col key={index}>\r\n                        <Image\r\n                          src={item.storageImg}\r\n                          className=\"homeImg\"\r\n                        />\r\n                          <Checkbox style={{ display: 'flex', alignItems: 'center' }} value={item.storageMoney}>\r\n                            <div className=\"guige\">\r\n                              {/* <img src={item.storageImg} alt=\"规格图\"/> */}\r\n                              <p>{item.twoValue + item.threeValue }</p>\r\n                            </div>\r\n                          </Checkbox>\r\n                        </Col>\r\n                      )\r\n                    })\r\n                  :\r\n                    \"\"\r\n                }\r\n              </Row>\r\n            </Checkbox.Group>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        {/* bottom */}\r\n        <footer className=\"footer\">\r\n          <div className='moneys'>\r\n            <ExclamationCircleFilled style={{ color: 'red' }} />\r\n            <div className=\"e\">总成本：{costPrice}</div>\r\n          </div>\r\n          <div className=\"footer_child2\">\r\n            <Input onChange={handleInputVal} style={{ width: 250, marginRight: '17px', borderRadius: '7px' }} placeholder=\"请输入包装方案名\" />\r\n            <Button onClick={handlePreservation} className=\"select_btn\" type=\"primary\">保存选择</Button>\r\n          </div>\r\n        </footer>\r\n\r\n      </Spin>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","E:\\项目包\\packing-box\\src\\pages\\lists.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":5,"column":13,"nodeType":"45","messageId":"46","endLine":5,"endColumn":15},{"ruleId":"43","severity":1,"message":"47","line":9,"column":7,"nodeType":"45","messageId":"46","endLine":9,"endColumn":19},{"ruleId":"43","severity":1,"message":"48","line":10,"column":7,"nodeType":"45","messageId":"46","endLine":10,"endColumn":22},{"ruleId":"43","severity":1,"message":"49","line":11,"column":7,"nodeType":"45","messageId":"46","endLine":11,"endColumn":16},{"ruleId":"43","severity":1,"message":"50","line":14,"column":5,"nodeType":"45","messageId":"46","endLine":14,"endColumn":18},{"ruleId":"43","severity":1,"message":"51","line":19,"column":5,"nodeType":"45","messageId":"46","endLine":19,"endColumn":20},{"ruleId":"43","severity":1,"message":"52","line":47,"column":29,"nodeType":"45","messageId":"46","endLine":47,"endColumn":48},{"ruleId":"43","severity":1,"message":"53","line":54,"column":10,"nodeType":"45","messageId":"46","endLine":54,"endColumn":24},{"ruleId":"43","severity":1,"message":"54","line":54,"column":26,"nodeType":"45","messageId":"46","endLine":54,"endColumn":42},{"ruleId":"43","severity":1,"message":"55","line":58,"column":10,"nodeType":"45","messageId":"46","endLine":58,"endColumn":24},{"ruleId":"43","severity":1,"message":"56","line":58,"column":26,"nodeType":"45","messageId":"46","endLine":58,"endColumn":43},{"ruleId":"43","severity":1,"message":"57","line":64,"column":10,"nodeType":"45","messageId":"46","endLine":64,"endColumn":26},{"ruleId":"43","severity":1,"message":"58","line":64,"column":28,"nodeType":"45","messageId":"46","endLine":64,"endColumn":47},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'dd' is defined but never used.","Identifier","unusedVar","'checkboxArrs' is assigned a value but never used.","'newCheckboxArrs' is assigned a value but never used.","'moneyArrs' is assigned a value but never used.","'AallGuigeArrs' is assigned a value but never used.","'defaultValueArr' is assigned a value but never used.","'setStorageMoneyArrs' is assigned a value but never used.","'sstorageIdArrs' is assigned a value but never used.","'setStorageIdArrs' is assigned a value but never used.","'concatMoneyArr' is assigned a value but never used.","'setConcatMoneyArr' is assigned a value but never used.","'defaultValueArrs' is assigned a value but never used.","'setDefaultValueArrs' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]