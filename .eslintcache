[{"D:\\项目包\\packing-box\\src\\reportWebVitals.js":"1","D:\\项目包\\packing-box\\src\\pages\\home.jsx":"2","D:\\项目包\\packing-box\\src\\pages\\lists.jsx":"3","D:\\项目包\\packing-box\\src\\api\\api.jsx":"4","D:\\项目包\\packing-box\\src\\App.js":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":15359,"mtime":1608710223786,"results":"8","hashOfConfig":"7"},{"size":16314,"mtime":1609147487978,"results":"9","hashOfConfig":"7"},{"size":256,"mtime":1608602981595,"results":"10","hashOfConfig":"7"},{"size":393,"mtime":1608605077995,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"qnyq75",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\项目包\\packing-box\\src\\reportWebVitals.js",[],["25","26"],"D:\\项目包\\packing-box\\src\\pages\\home.jsx",[],"D:\\项目包\\packing-box\\src\\pages\\lists.jsx",["27"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Divider, List, message, Input, Select, Spin, Modal } from 'antd';\r\nimport axios from 'axios';\r\nimport * as dd from 'dingtalk-jsapi';\r\n\r\nimport '../api/api';\r\nimport './lists.css';\r\n\r\n// 列表数据\r\nconst data = [\r\n  {\r\n    title: '暂无数据',\r\n  }\r\n];\r\n\r\n\r\nfunction Lists(props) {\r\n  localStorage.setItem(\"ns\", 1);\r\n  localStorage.removeItem(\"n\");\r\n\r\n  const { Option } = Select;\r\n\r\n  // 储存获取的列表数据\r\n  const [listData, setListData] = useState([]);\r\n  // 储存方案名\r\n  const [schemName, setSchemeName] = useState(false);\r\n  // 储存功能名\r\n  const [functionName, setFunctionName] = useState(false);\r\n  // 功用select value\r\n  const [selectVal, setSelectVal] = useState('选择功用');\r\n  // loading\r\n  const [spinning, setSpinning] = useState(true);\r\n  // 详情对话框弹出状态，默认为false\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  // 储存获取的列表详情\r\n  const [details, setDetails] = useState(null);\r\n\r\n  // 生命周期\r\n  useEffect(() => {\r\n\r\n    // 钉钉判断\r\n    if ( dd.env.platform !== 'notInDingTalk' ) {  //是否在钉钉环境中\r\n\r\n      dd.ready(function() {\r\n\r\n        dd.runtime.permission.requestAuthCode({\r\n          corpId: \"dingd3db415677f4c851\",\r\n          onSuccess: function(info) {\r\n            // code = info.code // 通过该免登授权码可以获取用户身份\r\n  \r\n            // 调用获取token\r\n            axios.post(global.constants.website+'/kaopin/bom/getUser',{\r\n              'code': info.code,  // 通过该免登授权码可以获取用户身份\r\n            })\r\n            .then(function (res) {\r\n              let tokens = res.data.data;\r\n              // 获取 存储token\r\n              localStorage.setItem(\"token\", res.data.data);\r\n              \r\n              if ( res.status === 200 ) {\r\n  \r\n                // token 获取成功调用获取列表 ajax\r\n                axios.post(global.constants.website+'/kaopin/bom/index',{\r\n                  'page': 1,\r\n                },\r\n                {\r\n                  headers: {AppAuthorization: tokens}    //post 方法传 token\r\n                })\r\n                .then(function (res) {\r\n                  // console.log(res);\r\n                  if ( res.data.status ) {\r\n                    if ( res.data.msg === \"token error\" ) {\r\n                      props.history.push({ pathname: \"/\" });\r\n  \r\n                    } else {\r\n                      setSpinning(false);\r\n                      // 储存获取list数据\r\n                      setListData(res.data.data.result);\r\n                      \r\n                    }\r\n  \r\n                  } else {\r\n                    props.history.push({ pathname: \"/\" });\r\n                    message.warning(res.data.msg);\r\n                  }\r\n                  // console.log(res.data);\r\n                })\r\n                .catch(function (error) {\r\n                  // props.history.push({ pathname: \"/\" });\r\n                  message.warning(error);\r\n                  // setSpinning(false);\r\n                });\r\n        \r\n              } else {\r\n                message.warning(res.data.msg);\r\n              }\r\n              // console.log(res.data);\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n          },\r\n          onFail : function(err) {\r\n            alert(err);\r\n          }\r\n      \r\n        });\r\n\r\n        dd.error(function(error){\r\n          /**\r\n           {\r\n              errorMessage:\"错误信息\",// errorMessage 信息会展示出钉钉服务端生成签名使用的参数，请和您生成签名的参数作对比，找出错误的参数\r\n              errorCode: \"错误码\"\r\n           }\r\n          **/\r\n          alert('dd error: ' + JSON.stringify(error));\r\n        });\r\n\r\n      });\r\n\r\n    } else {\r\n      message.warning('请在手机上打开操作！');\r\n    }\r\n\r\n    // // token 获取成功调用获取列表 ajax      测试用\r\n    // axios.post(global.constants.website+'/kaopin/bom/index',{\r\n    //   'page': 1,\r\n    // },\r\n    // {\r\n    //   headers: {AppAuthorization: localStorage.getItem(\"token\")}    //post 方法传 token\r\n    // })\r\n    // .then(function (res) {\r\n    //   // console.log(res);\r\n    //   if ( res.data.status ) {\r\n    //     if ( res.data.msg === \"token error\" ) {\r\n    //       props.history.push({ pathname: \"/\" });\r\n\r\n    //     } else {\r\n    //       setSpinning(false);\r\n    //       // 储存获取list数据\r\n    //       setListData(res.data.data.result);\r\n          \r\n    //     }\r\n\r\n    //   } else {\r\n    //     props.history.push({ pathname: \"/\" });\r\n    //     message.warning(res.data.msg);\r\n    //   }\r\n    //   // console.log(res.data);\r\n    // })\r\n    // .catch(function (error) {\r\n    //   // props.history.push({ pathname: \"/\" });\r\n    //   message.warning(error);\r\n    //   // setSpinning(false);\r\n    // });\r\n    \r\n    \r\n\r\n  },[props.history]);\r\n\r\n// 后道按钮\r\nfunction handleHoudao() {\r\n  // console.log('添加后道包装2');\r\n\r\n  localStorage.setItem(\"n\", localStorage.getItem(\"ns\") + 1);\r\n  props.history.push({ pathname: \"/home\", state: 2 });\r\n  \r\n  // 添加厚道包装储存状态码\r\n  localStorage.setItem(\"state\", 2);\r\n  // 标题头\r\n  document.title = \"后道包装\";\r\n  // console.log(document.title);\r\n}\r\n// 发货按钮\r\nfunction handleFahuo() {\r\n  // console.log(\"添加发货包装1\");\r\n\r\n  localStorage.setItem(\"n\", localStorage.getItem(\"ns\") + 1);\r\n  props.history.push({ pathname: \"/home\", state: 1 });\r\n\r\n  // 添加厚道包装储存状态码\r\n  localStorage.setItem(\"state\", 1);\r\n  // 标题头\r\n  document.title = \"发货包装\";\r\n  // console.log(document.title);\r\n  \r\n}\r\n\r\n// input 方案名 value\r\nfunction nameChange(e) {\r\n  // 储存方案名\r\n  setSchemeName(e.target.value);\r\n\r\n  // 方案名input 删除为空的时候，重新获取列表数据\r\n  if ( !e.target.value ) {\r\n    \r\n    setSpinning(true);\r\n    // 获取列表\r\n    axios.post(global.constants.website+'/kaopin/bom/index',{\r\n      'page': 1,\r\n    },\r\n    {\r\n      headers: {AppAuthorization: localStorage.getItem(\"token\")}    //post 方法传 token\r\n    })\r\n    .then(function (res) {\r\n      if ( res.data.status ) {\r\n        \r\n        if ( res.data.msg === \"token error\" ) {\r\n          props.history.push({ pathname: \"/\" });\r\n\r\n        } else {\r\n          setSpinning(false);\r\n          // console.log(res.data.data.result);\r\n          // console.log(res.data.data);\r\n          // 储存获取list数据\r\n          setListData(res.data.data.result);\r\n          \r\n        }\r\n\r\n      } else {\r\n        message.warning(res.data.msg);\r\n      }\r\n      // console.log(res.data);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      setSpinning(false);\r\n    });\r\n\r\n  }\r\n  // console.log(e.target.value);\r\n}\r\n// select，选择后道或者发货\r\nfunction handleChange(value) {\r\n  // 储存功能值\r\n  setFunctionName(value);\r\n  // 更改功用选中默认\r\n  setSelectVal(value);\r\n  // console.log(`selected ${value}`);\r\n}\r\n// 搜索按钮\r\nfunction handleSearch() {\r\n  // 更改功用选中默认\r\n  // setSelectVal('选择功用');\r\n\r\n  if ( schemName === false && functionName === false ) {\r\n\r\n    message.warning('请输入方案名或功用！');\r\n  \r\n  }else if ( schemName && functionName ) {\r\n    // console.log('上面名字加功用');\r\n\r\n    setSpinning(true);\r\n    // 获取方案名指定列表列表\r\n    axios.post(global.constants.website+'/kaopin/bom/index',{\r\n      'page': 1,\r\n      'plan_name': schemName,\r\n      'plan_type': functionName,\r\n    },\r\n    {\r\n      headers: {AppAuthorization: localStorage.getItem(\"token\")}    //post 方法传 token\r\n    })\r\n    .then(function (res) {\r\n      if ( res.data.status ) {\r\n\r\n        if ( res.data.data.result.length ) {\r\n\r\n          if ( res.data.msg === \"token error\" ) {\r\n            props.history.push({ pathname: \"/\" });\r\n  \r\n          } else {\r\n\r\n            setSpinning(false);\r\n            // console.log(res.data.data.result);\r\n            // 储存获取list数据\r\n            setListData(res.data.data.result);\r\n\r\n            // 更改功用默认值\r\n            setSelectVal('选择功用');\r\n            setFunctionName(false);\r\n            \r\n          }\r\n          \r\n\r\n        }else {\r\n          \r\n          setSpinning(false);\r\n          // 更改功用默认值\r\n          setSelectVal('选择功用');\r\n          setFunctionName(false);\r\n          message.warning('暂无该数据！');\r\n        }\r\n\r\n      } else {\r\n        message.warning(res.data.msg);\r\n      }\r\n      // console.log(res.data);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      setSpinning(false);\r\n    });\r\n\r\n  }else if ( schemName === false || functionName ) {\r\n\r\n    setSpinning(true);\r\n    // 获取发货列表\r\n    axios.post(global.constants.website+'/kaopin/bom/index',{\r\n      'page': 1,\r\n      'plan_name': '',\r\n      'plan_type': functionName,\r\n    },\r\n    {\r\n      headers: {AppAuthorization: localStorage.getItem(\"token\")}    //post 方法传 token\r\n    })\r\n    .then(function (res) {\r\n      if ( res.data.status ) {\r\n\r\n        if ( res.data.data.result.length ) {\r\n\r\n          // console.log(res.data.data);\r\n\r\n          if ( res.data.msg === \"token error\" ) {\r\n            props.history.push({ pathname: \"/\" });\r\n  \r\n          } else {\r\n\r\n            setSpinning(false);\r\n            // console.log(res.data.data.result);\r\n            // 储存获取list数据\r\n            // 更改功用默认值\r\n            setSelectVal('选择功用');\r\n            setFunctionName(false);\r\n            setListData(res.data.data.result);\r\n            \r\n          }\r\n          \r\n\r\n        }else {\r\n          \r\n          setSpinning(false);\r\n          // 更改功用默认值\r\n          setSelectVal('选择功用');\r\n          setFunctionName(false);\r\n          message.warning('暂无该数据！');\r\n        }\r\n\r\n      } else {\r\n        message.warning(res.data.msg);\r\n      }\r\n      // console.log(res.data);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      setSpinning(false);\r\n    });\r\n\r\n  }else {\r\n\r\n    setSpinning(true);\r\n    // 获取发货列表\r\n    axios.post(global.constants.website+'/kaopin/bom/index',{\r\n      'page': 1,\r\n      'plan_name': schemName,\r\n      'plan_type': '',\r\n    },\r\n    {\r\n      headers: {AppAuthorization: localStorage.getItem(\"token\")}    //post 方法传 token\r\n    })\r\n    .then(function (res) {\r\n      if ( res.data.status ) {\r\n\r\n        if ( res.data.data.result.length ) {\r\n\r\n          // console.log(res.data.data);\r\n\r\n          if ( res.data.msg === \"token error\" ) {\r\n            props.history.push({ pathname: \"/\" });\r\n  \r\n          } else {\r\n\r\n            setSpinning(false);\r\n            // console.log(res.data.data.result);\r\n            // 储存获取list数据\r\n            // 更改功用默认值\r\n            setSelectVal('选择功用');\r\n            setFunctionName(false);\r\n            setListData(res.data.data.result);\r\n            \r\n          }\r\n          \r\n\r\n        }else {\r\n          \r\n          setSpinning(false);\r\n          // 更改功用默认值\r\n          setSelectVal('选择功用');\r\n          setFunctionName(false);\r\n          message.warning('暂无该数据！');\r\n        }\r\n\r\n      } else {\r\n        message.warning(res.data.msg);\r\n      }\r\n      // console.log(res.data);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      setSpinning(false);\r\n    });\r\n\r\n  }\r\n  \r\n  // schemName\r\n  // functionName\r\n}\r\n\r\n// 点击当前list 获取当前列表详情\r\nfunction delItem(id) {\r\n  \r\n  // 点击列表获取对应详情是，加载logding\r\n  setSpinning(true);\r\n  // console.log(id);\r\n  axios.post(global.constants.website+'/kaopin/bom/details',{\r\n    'id': id,\r\n  },\r\n  {\r\n    headers: {AppAuthorization: localStorage.getItem(\"token\")}    //post 方法传 token\r\n  })\r\n  .then(function (res) {\r\n\r\n    if ( res.data.status ) {\r\n\r\n      if ( res.data.msg === \"token error\" ) {\r\n        props.history.push({ pathname: \"/\" });\r\n\r\n      } else {\r\n        \r\n        // 更改详情对话框状态，true 为显示\r\n        setIsModalVisible(true);\r\n        // 详情获取成功lognding也将改成false\r\n        setSpinning(false);\r\n        // console.log(res.data.data);\r\n        // 储存列表详情数据\r\n        setDetails(res.data.data);\r\n        \r\n      }\r\n\r\n    } else {\r\n      message.warning(res.data.msg);\r\n    }\r\n    // console.log(res.data);\r\n  })\r\n  .catch(function (error) {\r\n    console.log(error);\r\n  });\r\n}\r\n\r\n// 对话框 确定按钮，和取消按钮\r\nconst handleOk = () => {\r\n\r\n  setIsModalVisible(false);\r\n  \r\n};\r\nconst handleCancel = () => {\r\n  setIsModalVisible(false);\r\n};\r\n\r\nmessage.config({ //更改警告框的位置\r\n  top: '40%',\r\n});\r\n  \r\n  return(\r\n    <div style={{ height: '100%' }}>\r\n      <div className='box' style={{ height: '100%' }}>\r\n        <div style={{ height:'16.5%' }}>\r\n          <div className=\"list_Header\">\r\n            <Button onClick={handleHoudao} className=\"select_btn\" type=\"primary\" ghost={true} >添加后道包装</Button>\r\n\r\n            <Button onClick={handleFahuo} className=\"select_btn\" type=\"primary\" ghost={true} >添加发货包装</Button>\r\n          </div>\r\n          \r\n          <Divider />\r\n          {/* 搜索框 */}\r\n          <div className=\"sousuo\">\r\n            <Input style={{ width:'160px' }} placeholder=\"请输入方案名\" onChange={nameChange} />\r\n            <Select value={selectVal} style={{ width: 110, marginRight:'5px', marginLeft:'5px' }} onChange={handleChange}>\r\n              <Option value=\"2\">后道</Option>\r\n              <Option value=\"1\">发货</Option>\r\n            </Select>\r\n            <Button onClick={handleSearch}>搜索</Button>\r\n          </div>\r\n        </div>\r\n        {/* 列表 */}\r\n        <div className=\"lists\" style={{ height: '80%' }}>\r\n          <Spin spinning={spinning} tip=\"列表加载中...\">\r\n            {\r\n              listData !== null ?\r\n              <List style={{ height: '100%' }}\r\n                locale={{emptyText: \"暂无该数据\"}}\r\n                pagination={{\r\n                  onChange: page => {\r\n                      // console.log(page);\r\n                    },\r\n                    pageSize: 8,\r\n                }}\r\n                itemLayout=\"horizontal\"\r\n                dataSource={listData}\r\n                renderItem={item => (\r\n                  <List.Item onClick={() => delItem(item.id) } style={{ padding: '10px 0' }}>\r\n                    <List.Item.Meta\r\n                      title={item.plan_name}\r\n                      description={item.plan_type + \"　\" + \"￥\" + item.total_price}\r\n                    />\r\n                  </List.Item>\r\n                )}\r\n              />\r\n              :\r\n              <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={data}\r\n                renderItem={item => (\r\n                  <List.Item>\r\n                    <List.Item.Meta\r\n                      // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                      title={<a href=\"https://ant.design\">{item.plan_name}</a>}\r\n                    />\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            }\r\n          </Spin>\r\n        </div>\r\n      </div>\r\n      \r\n        {\r\n          details !== null ?\r\n            <Modal title={details.plan_name} footer={[\r\n              <Button key=\"back\" type=\"primary\" onClick={handleOk}>确定</Button>,\r\n            ]} onCancel={handleCancel} visible={isModalVisible}>\r\n              {\r\n                details.details.map((item, index) => {\r\n                  return(\r\n                    <div className=\"details\" key={index}>\r\n                      <div style={{ maxWidth: '60px', marginRight: '15px' }}>\r\n                        <img src={item.img} alt=\"详情图\"/>\r\n                      </div>\r\n                      <p>\r\n                        {item.物料名称 + item.规格 + \"￥\" + item.单价 + \"/\" + item.单位}\r\n                      </p>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </Modal>\r\n          :\r\n          \"\"\r\n        }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Lists;",["28","29"],"D:\\项目包\\packing-box\\src\\api\\api.jsx",[],"D:\\项目包\\packing-box\\src\\App.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":513,"column":57,"nodeType":"36","messageId":"37","endLine":513,"endColumn":58},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["40"],["41"],"no-global-assign","no-unsafe-negation"]